services:
  postgres:
    image: postgres
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: postgres
    environment:
      - TZ=Europe/Paris
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      tmh-net:
        ipv4_address: 172.35.0.2

  # temporal_execution:
  #   image: temporal_execution
  #   build:
  #     context: ./ros2/src/temporal_execution
  #     dockerfile: Dockerfile
  #   container_name: temporal_execution
  #   environment:
  #     - RCUTILS_LOGGING_USE_STDERR=0 # Logs STDERR
  #     - RCUTILS_LOGGING_USE_STDOUT=0 # Logs STDOUT
  #     - RCUTILS_LOGGING_IMPLEMENTATION=rcutils_logging_file
  #     - ROS_HOME=/ros2_ws/.ros
  #   volumes:
  #     - ./ros2/src/temporal_execution/Logs:/ros_logs_backup
  #   tmpfs:
  #     - /ros2_ws/.ros/log # To RAM
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "1"
  #         memory: 200M
  #       reservations:
  #         cpus: "1"
  #         memory: 200M
  #   command: /entrypoint.sh

  temporal_time_series_ms:
    image: temporal_time_series_ms
    build:
      context: ./temporal_time_series_ms
      dockerfile: Dockerfile
    container_name: temporal_time_series_ms
    environment:
      - TZ=Europe/Paris
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    volumes:
      - ./temporal_time_series_ms/Logs:/app/Logs
      - ./temporal_time_series_ms/TE_logs:/app/TE_logs
    ports:
      - "${API_PORT}:3001"
    depends_on:
      - postgres
    networks:
      tmh-net:
        ipv4_address: 172.35.0.3

networks:
  tmh-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.35.0.0/16"
          gateway: "172.35.0.1"
