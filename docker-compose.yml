services:
  #talker:
   # build:
    #  context: .
     # dockerfile: Dockerfile
    #image: my/ros:app
    #command: ros2 run demo_nodes_cpp talker
    #networks:
     # - ros-net

  # listener:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: my/ros:app
  #   command: ros2 run demo_nodes_py listener
  #   networks:
  #     - ros-net

  temporal_execution:
    container_name: temporal_execution
    build:
      context: src/temporal_execution
      dockerfile: Dockerfile
    image: temporal_execution
    environment:
      - RCUTILS_LOGGING_USE_STDERR=0      # Logs STDERR
      - RCUTILS_LOGGING_USE_STDOUT=0      # Logs STDOUT
      - RCUTILS_LOGGING_IMPLEMENTATION=rcutils_logging_file
      - ROS_HOME=/ros2_ws/.ros
    command: bash -c ". /opt/ros/jazzy/setup.sh && \
                  . /ros2_ws/install/setup.sh && \
                  ros2 run temporal_execution loop_node > /dev/null 2>&1"
    volumes:
      - ./src/temporal_execution/logs:/ros2_ws/.ros/log
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 200M
        reservations:
          cpus: "1"
          memory: 200M
  
  # loop:
  #   container_name: loop
  #   build:
  #     context: src/loop
  #     dockerfile: Dockerfile  
  #   image: loop
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "1"
  #         memory: 200M
  #       reservations:
  #         cpus: "1"
  #         memory: 200M

networks:
  ros-net:
    driver: bridge
