openapi: 3.0.0

info:
  title: Temporal time series API
  description: API documentation for the Temporal sime series micro service.
  version: 1.0.0

servers:
  - url: http://localhost:3001
    description: Local development server

tags:
  - name: Hello
    description: Hello World! for test API
  - name: Json Graph
    description: Json graph
  - name: Logs
    description: Logs
  - name: Dataset
    description: Dataset

components:
  schemas:
    Model:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/Node"
    Node:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        expectedExecTime:
          type: number
          format: double
        behaviors:
          type: array
          items:
            $ref: "#/components/schemas/Behavior"
    Behavior:
      type: object
      properties:
        id:
          type: integer
          format: int64
        actions:
          type: array
          items:
            $ref: "#/components/schemas/Action"
    Action:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum: [timer, pub, sub, other]
        topic:
          type: string
        value:
          type: number
          format: double
        executionTimes:
          type: array
          items:
            type: number
            format: double
        estimatedExecTime:
          type: number
          format: double

paths:
  /hello:
    get:
      tags:
        - Hello
      summary: Returns a greeting message
      operationId: helloWorld
      responses:
        "200":
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                example: Hello World!
  /api/hello:
    get:
      tags:
        - Hello
      summary: Returns a greeting message
      operationId: helloWorld
      responses:
        "200":
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                example: Hello World!

  /api/graph:
    post:
      tags:
        - Json Graph
      summary: Save a json graph of a model
      operationId: saveJsonGraph
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Model"
        "400":
          description: Invalid file format or content.
          content:
            application/json:
              schema:
                type: string
                example: Invalid file format or content.
        "409":
          description: Duplicate entry.
          content:
            application/json:
              schema:
                type: string
                example: Duplicate entry.
        "500":
          description: Oops, something went wrong.
          content:
            application/json:
              schema:
                type: string
                example: Oops, something went wrong.

  /api/logs:
    post:
      tags:
        - Logs
      summary: Upload multiple log files
      operationId: saveLogs
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                modelName:
                  type: string
                  description: Name of the model
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: Logs saved successfully
          content:
            text/plain:
              schema:
                type: string
                example: "OK"
        "400":
          description: Invalid file format or content.
          content:
            text/plain:
              schema:
                type: string
                example: Invalid file format or content.
        "404":
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                example: "Model not found: %s | Node not found: %s"
        "500":
          description: Oops, something went wrong.
          content:
            text/plain:
              schema:
                type: string
                example: Oops, something went wrong.

  /api/dataset:
    get:
      tags:
        - Dataset
      summary: Get dataset
      operationId: getDataset
      responses:
        "200":
          description: Dataset retrieved successfully
          content:
            application/json:
              schema:
                type: object
        "400":
          description: IO error while processing dataset
          content:
            text/plain:
              schema:
                type: string
                example: "IO error while processing dataset: %s"
        "500":
          description: Error creating dataset
          content:
            text/plain:
              schema:
                type: string
                example: "Error creating dataset: %s"
